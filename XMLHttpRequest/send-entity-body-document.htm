<!doctype html>
<html>
  <head>
    <title>XMLHttpRequest: send() - Document</title>
    <meta charset="utf-8">
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-send()-method" data-tested-assertations="/following::ol/li[4]" />  
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#dom-XMLHttpRequest-send-document" data-tested-assertations="/following::dd" />  
  </head>
  <body>
    <div id="log"></div>
    <script>
     var expectations = [
      { isHTML: false, responseText : '<\u00FF\/>' },
      { isHTML: true, responseText : '<body>\uFFFD<\/body>' }, /*invalid character code in document turns into FFFD*/
      { isHTML: true, responseText : '<body>\u30C6\u30b9\u30c8<\/body>' } /* correctly serialized Shift-JIS */
     ] 
      
      function request(input, number) {
        test(function() {
          var client = new XMLHttpRequest()
          client.open("POST", "resources/content.php?response_charset_label=UTF-8", false)
          client.send(input)
          var exp = expectations[number]
          if(exp.isHTML){
            assert_equals(client.getResponseHeader('X-Request-Content-Type'), 'text/html;charset=UTF-8', 'HTML documents should be serialized and sent as text/html (TEST#'+number+')')
          }else{
            assert_equals(client.getResponseHeader('X-Request-Content-Type'), 'application/xml;charset=UTF-8', 'XML documents should be serialized and sent as application/xml (TEST #'+number+')')
          }
          // The indexOf() assertation will overlook some stuff, i.e. XML prologues that shouldn't be there (looking at you, Presto).
          // However, arguably these things have little to do with the XHR functionality we're testing.
          assert_true(client.responseText.indexOf(exp.responseText) != -1)
          assert_equals(client.responseXML, null)
        })
      }
      function init(fr, number) { request(fr.contentDocument, number) }
    </script>
    <!--
        This test also tests how documents in various encodings are serialized.
        The below IFRAMEs contain:
          * one XML document parsed from a windows-1252 source - content is <Ã¿/>
          * one HTML-document parsed from an invalid UTF-8 source, will contain a basic HTML DOM 
             with a U+FFFD replacement character for the invalid char
          * one HTML document parsed from a valid Shift-JIS source
     -->
    <iframe src='resources/win-1252-xml.php' onload="init(this, 0)"></iframe>
    <iframe src='resources/invalid-utf8-html.php' onload="init(this, 1)"></iframe>
    <iframe src='resources/shift-jis-html.php' onload="init(this, 2)"></iframe>
  </body>
</html>
